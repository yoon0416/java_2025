/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-24 08:33:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jsp015request_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"container card bg-dark my-5\">\r\n");
      out.write("		<h3 class=\"card-header text-white\">내장객체</h3>\r\n");
      out.write("		<pre style=\"color: white\">\r\n");
      out.write("		1. jsp페이지가 웹컨테이너에 의해 서블릿으로 변환될 때\r\n");
      out.write("		2. 고정된 이름의 객체 컨테이너로 자동으로 구현\r\n");
      out.write("		3. request(요청), response(응답), session(정보저장), out(출력)\r\n");
      out.write("		</pre>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div class=\"container card bg-dark my-5\">\r\n");
      out.write("		<h3 class=\"card-header bg-dark text-white\">request(요청)</h3>\r\n");
      out.write("		<pre style=\"color: white\">\r\n");
      out.write("		1. action = \"처리컴포넌트\"\r\n");
      out.write("		2. method = \"처리방식\"\r\n");
      out.write("		3. name =\"사용자가 입력한 값 보관이름\"\r\n");
      out.write("		</pre>\r\n");
      out.write("		<form action=\"jsp015_checkbox.jsp\" method=\"get\"\r\n");
      out.write("			onsubmit=\"return checkbox()\">\r\n");
      out.write("			<div class=\"mb-3 mt-3\" style=\"color: white\">\r\n");
      out.write("				<label for=\"username\" class=\"form-label\">name</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control\" id=\"username\"\r\n");
      out.write("					placeholder=\"이름 입력하세요\" name=\"username\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- user name -->\r\n");
      out.write("			<div class=\"form-check\" style=\"color: white\">\r\n");
      out.write("				<input class=\"form-check-input\" type=\"checkbox\" id=\"check1\"\r\n");
      out.write("					name=\"option1\" value=\"dog\"> <label class=\"form-check-label\"\r\n");
      out.write("					for=\"check1\">Dog</label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\" style=\"color: white\">\r\n");
      out.write("				<input class=\"form-check-input\" type=\"checkbox\" id=\"check2\"\r\n");
      out.write("					name=\"option1\" value=\"cat\"> <label class=\"form-check-label\"\r\n");
      out.write("					for=\"check2\">Cat</label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\" style=\"color: white\">\r\n");
      out.write("				<input class=\"form-check-input\" type=\"checkbox\" id=\"check3\"\r\n");
      out.write("					name=\"option1\" value=\"pig\"> <label class=\"form-check-label\"\r\n");
      out.write("					for=\"check3\">Pig</label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"my-3\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">전송</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- 내장객체 안내 -->\r\n");
      out.write("		</form>\r\n");
      out.write("		<script>\r\n");
      out.write("			function checkbox(){\r\n");
      out.write("				let username = document.getElementById(\"username\");\r\n");
      out.write("				let checkboxs = document.querySelectorAll(\".form-check-input:checked\");\r\n");
      out.write("				\r\n");
      out.write("				// 각 체크박스 상태 출력\r\n");
      out.write("				checkboxs.forEach(function(checkbox) {\r\n");
      out.write("					console.log(checkbox);  // 체크박스 객체를 출력\r\n");
      out.write("					console.log(checkbox.length);  // 체크 여부를 출력\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("				if(username.value == \"\"){\r\n");
      out.write("					alert(\"빈칸입니다.\"); username.focus(); return false;\r\n");
      out.write("				}\r\n");
      out.write("				if(checkboxs.length == 0){\r\n");
      out.write("					alert(\"체크박스를 한개 이상은 체크하셔야합니다.\");\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- end checkbox -->\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container card my-5\">\r\n");
      out.write("		<h3 class=\"container card my-5\">request(요청) -radio</h3>\r\n");
      out.write("		\r\n");
      out.write("		<form action=\"jsp015_radio.jsp\" method=\"get\"\r\n");
      out.write("			onsubmit=\"return check2()\">\r\n");
      out.write("			<div class=\"mb-3 mt-3\" style=\"color: white\">\r\n");
      out.write("				<label for=\"username1\" class=\"form-label\">name</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control\" id=\"username1\"\r\n");
      out.write("					placeholder=\"사용자 이름 입력하세요\" name=\"username\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- user name -->\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input type=\"radio\" class=\"form-check-input1\" id=\"radio1\" style=\"margin-right:10px\"\r\n");
      out.write("						name=\"optradio\" value=\"yes\" >yes\r\n");
      out.write("					<label class=\"form-check-label\" for=\"radio1\"></label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input type=\"radio\" class=\"form-check-input1\" id=\"radio2\" style=\"margin-right:10px\"\r\n");
      out.write("						name=\"optradio\" value=\"no\">no\r\n");
      out.write("					<label class=\"form-check-label\" for=\"radio2\"></label>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"form-check\">\r\n");
      out.write("				<input type=\"radio\" class=\"form-check-input1\" style=\"margin-right:10px\" disabled>사용못함-disabled \r\n");
      out.write("				<label class=\"form-check-label\"></label>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("			<!-- radio -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"my-3\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">전송</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<script>\r\n");
      out.write("				function check2() {\r\n");
      out.write("			    	let username1 = document.getElementById(\"username1\");\r\n");
      out.write("		   		 	let radio1 = document.querySelectorAll(\".form-check-input1:checked\");\r\n");
      out.write("\r\n");
      out.write("		   			 for (let r of radio1) {\r\n");
      out.write("		       		 console.log(r);  \r\n");
      out.write("		   		 	}\r\n");
      out.write("		\r\n");
      out.write("				    if (username1.value == \"\") {\r\n");
      out.write("				        alert(\"빈칸입니다.\");\r\n");
      out.write("				        username1.focus();\r\n");
      out.write("				        return false;\r\n");
      out.write("				    }\r\n");
      out.write("				    if (radio1.length == 0) {\r\n");
      out.write("				        alert(\"라디오 버튼을 한 개 이상 체크하셔야 합니다.\");\r\n");
      out.write("				        return false;\r\n");
      out.write("				    }\r\n");
      out.write("		}\r\n");
      out.write("		</script>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- end radio -->\r\n");
      out.write("	<div class=\"container card my-5\">\r\n");
      out.write("		<h3 class=\"container card my-5\">request(요청) - select</h3>\r\n");
      out.write("	\r\n");
      out.write("		<form action=\"jsp015_select.jsp\" method=\"get\"\r\n");
      out.write("			onsubmit=\"return check3()\">\r\n");
      out.write("			<div class=\"mb-3 mt-3\" style=\"color: white\">\r\n");
      out.write("				<label for=\"username3\" class=\"form-label\">name</label> <input\r\n");
      out.write("					type=\"text\" class=\"form-control\" id=\"username3\"\r\n");
      out.write("					placeholder=\"사용자 이름 입력하세요\" name=\"username\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- user name -->\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("			<label for=\"color\">color 선택</label>\r\n");
      out.write("			<select class=\"form-select\" id=\"color\" name=\"color\">\r\n");
      out.write("				<option value=\"\"></option>\r\n");
      out.write("				<option value=\"bg-danger\">RED</option>\r\n");
      out.write("				<option value=\"bg-success\">GREEN</option>\r\n");
      out.write("				<option value=\"bg-primary\">BLUE</option>\r\n");
      out.write("				<option value=\"bg-dark\">BLACK</option>\r\n");
      out.write("			</select>\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("			<!-- select -->\r\n");
      out.write("\r\n");
      out.write("			<div class=\"my-3\">\r\n");
      out.write("				<button type=\"submit\" class=\"btn btn-primary\">전송</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<script>\r\n");
      out.write("		function check3() {\r\n");
      out.write("		    let username3 = document.getElementById(\"username3\");\r\n");
      out.write("		    let color = document.getElementById(\"color\");\r\n");
      out.write("\r\n");
      out.write("		  \r\n");
      out.write("		    if (color.value === \"\") {\r\n");
      out.write("		        alert(\"선택하세요.\");\r\n");
      out.write("		        color.focus();\r\n");
      out.write("		        return false;\r\n");
      out.write("		    }\r\n");
      out.write("\r\n");
      out.write("		    \r\n");
      out.write("		    if (username3.value == \"\") {\r\n");
      out.write("		        alert(\"빈칸입니다.\");\r\n");
      out.write("		        username3.focus();\r\n");
      out.write("		        return false;\r\n");
      out.write("		    }\r\n");
      out.write("\r\n");
      out.write("		  \r\n");
      out.write("		}\r\n");
      out.write("		</script>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
