/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-20 06:41:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mlikkk_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>ì°ì </title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"p-5 bg-dark text-white rounded\">\r\n");
      out.write("        <h1>Milk ORDER Project- PreparedStatemnt Ex</h1>\r\n");
      out.write("        <p>PreparedStatemnt Ex</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container card my-5\">\r\n");
      out.write("        <h3 class=\"card-header text-center\">Milk Order</h3>\r\n");
      out.write("        <table class=\"table table-dark table-striped table-hover my-5\">\r\n");
      out.write("            <caption>ì°ì ì£¼ë¬¸íí©</caption>\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th scope=\"col\">NO</th>\r\n");
      out.write("                    <th scope=\"col\">NAME</th>\r\n");
      out.write("                    <th scope=\"col\">PRICE</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                ");

                    Connection conn = null; 
                    PreparedStatement pstmt = null;
                    ResultSet rset = null;
                    String sql = "SELECT * FROM milk";
                    String url = "jdbc:mysql://localhost:3306/milk";
                    String id = "root", pass = "1234";

                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        conn = DriverManager.getConnection(url, id, pass);
                        pstmt = conn.prepareStatement(sql);
                        rset = pstmt.executeQuery();

                        while (rset.next()) {
                            int mno = rset.getInt("mno");
                            String mname = rset.getString("mname");
                            int mprice = rset.getInt("mprice");
                
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( mno );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( mname );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( mprice );
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");
 }
                    } catch (SQLException e) {
                        out.println("SQL ì¤ë¥: " + e.getMessage());
                        e.printStackTrace();
                    } catch (Exception e) {
                        e.printStackTrace();
                    } finally {
                        try {
                            if (rset != null) rset.close();
                            if (pstmt != null) pstmt.close();
                            if (conn != null) conn.close();
                        } catch (SQLException e) {
                            e.printStackTrace();
                        }
                    }
                
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container card my-5\">\r\n");
      out.write("        <h3 class=\"card-header text-center\">Milk Order</h3>\r\n");
      out.write("        <table class=\"table table-dark table-striped table-hover my-5\">\r\n");
      out.write("            <caption>milk ì£¼ë¬¸íí©</caption>\r\n");
      out.write("            <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th scope=\"col\">NO</th>\r\n");
      out.write("                    <th scope=\"col\">NAME</th>\r\n");
      out.write("                    <th scope=\"col\">NUM</th>\r\n");
      out.write("                    <th scope=\"col\">ì£¼ë¬¸ë ì§</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                <!-- ì£¼ë¬¸ ë´ì­ì ì¬ê¸°ì ì¶ë ¥ -->\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container card my-5\">\r\n");
      out.write("        <h3>MILK ì£¼ë¬¸íë¬ ê°ê¸°</h3>\r\n");
      out.write("        <div id=\"accordion\">\r\n");
      out.write("            <div class=\"card my-3\">\r\n");
      out.write("                <div class=\"card-header bg-warning\">\r\n");
      out.write("                    <a class=\"btn btn-warning text-white font-weight-bold\" data-bs-toggle=\"collapse\" href=\"#collapseOne\">\r\n");
      out.write("                        ì£¼ë¬¸íê¸°\r\n");
      out.write("                    </a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"collapseOne\" class=\"collapse show\" data-bs-parent=\"#accordion\">\r\n");
      out.write("                    <div class=\"card-body\">Lorem ipsum..</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"card my-3\">\r\n");
      out.write("                <div class=\"card-header bg-warning\">\r\n");
      out.write("                    <a class=\"btn btn-warning text-white font-weight-bold\" data-bs-toggle=\"collapse\" href=\"#collapseTwo\">\r\n");
      out.write("                        ì£¼ë¬¸ìì \r\n");
      out.write("                    </a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"collapseTwo\" class=\"collapse\" data-bs-parent=\"#accordion\">\r\n");
      out.write("                    <div class=\"card-body\">Lorem ipsum..</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"card my-3\">\r\n");
      out.write("                <div class=\"card-header bg-warning\">\r\n");
      out.write("                    <a class=\"btn btn-warning text-white font-weight-bold\" data-bs-toggle=\"collapse\" href=\"#collapseThree\">\r\n");
      out.write("                        ì£¼ë¬¸ì­ì \r\n");
      out.write("                    </a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id=\"collapseThree\" class=\"collapse\" data-bs-parent=\"#accordion\">\r\n");
      out.write("                    <div class=\"card-body\">Lorem ipsum..</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
