/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.100
 * Generated at: 2025-03-27 08:17:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.company.dao.BoardDao;
import com.company.domain.BoardVO;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/inc/footer.jsp", Long.valueOf(1743038127136L));
    _jspx_dependants.put("/inc/header.jsp", Long.valueOf(1743062746716L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.company.dao.BoardDao");
    _jspx_imports_classes.add("com.company.domain.BoardVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- header -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html  lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- Latest compiled and minified CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- Latest compiled JavaScript -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- navrbar -->\r\n");
      out.write("<!-- navrbar -->\r\n");
      out.write("<nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n");
      out.write("		<div class=\"container-fluid\">\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"javascript:void(0)\">Yoon</a>\r\n");
      out.write("			<button class=\"navbar-toggler\" type=\"button\"\r\n");
      out.write("				data-bs-toggle=\"collapse\" data-bs-target=\"#mynavbar\">\r\n");
      out.write("				<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<div class=\"collapse navbar-collapse\" id=\"mynavbar\">\r\n");
      out.write("				<ul class=\"navbar-nav me-auto\">\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("					<a class=\"nav-link\" href=\"javascript:void(0)\">Link</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("				\r\n");
      out.write("				<ul class=\"navbar-nav d-flex\">\r\n");
      out.write("				<!-- 로그인 했을 때 -->\r\n");
      out.write("				<!-- 로그인 했을 때 -->\r\n");
      out.write("				");
 
				String id = (String) session.getAttribute("username"); 
				if( id != null){   
      out.write("\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"jsp022_my.jsp\">");
      out.print(id );
      out.write("</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"jsp022_Logout.jsp\">LOGOUT</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				");
	}else{   
      out.write("\r\n");
      out.write("				<!-- 로그인 안했을 때 -->\r\n");
      out.write("				<!-- 로그인 안했을 때 -->\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"jsp022_Login.jsp\">LOGIN</a>\r\n");
      out.write("					</li>\r\n");
      out.write("					<li class=\"nav-item\">\r\n");
      out.write("						<a class=\"nav-link\" href=\"javascript:void(0)\">JOIN</a>\r\n");
      out.write("					</li>\r\n");
      out.write("				");
 	}   
      out.write("\r\n");
      out.write("				</ul>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("	<!-- navrbar -->\r\n");
      out.write("<!-- navrbar -->");
      out.write("\r\n");
      out.write("<!-- header -->\r\n");
      out.write("\r\n");
      out.write("<div class=\"container card my-5\">\r\n");
      out.write("    <h3 class=\"card-header bg-dark text-white text-center\">게시판</h3>\r\n");
      out.write("    <!-- 게시판 테이블 -->\r\n");
      out.write("    <table class=\"table table-bordered table-striped table-hover table-dark my-5 text-center\">\r\n");
      out.write("        <caption>게시판</caption>\r\n");
      out.write("        <thead>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th scope=\"col\">NO</th>\r\n");
      out.write("                <th scope=\"col\">TITLE</th>\r\n");
      out.write("                <th scope=\"col\">WRITER</th>\r\n");
      out.write("                <th scope=\"col\">DATE</th>\r\n");
      out.write("                <th scope=\"col\">HIT</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </thead>\r\n");
      out.write("        <tbody>\r\n");
      out.write("            ");
 
                // BoardDao 객체를 사용하여 데이터 불러오기
                BoardDao dao = new BoardDao();
            	ArrayList<BoardVO> boardList = dao.selectAll(); // selectAll() 메소드로 게시글 목록을 불러옴
                for(BoardVO board : boardList) {
            
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>");
      out.print( board.getBno() );
      out.write("</td>\r\n");
      out.write("                    <td><a href=\"detail.jsp\" style= \"text-decoration: none; color: inherit;\"> ");
      out.print( board.getBtitle() );
      out.write("</a></td>\r\n");
      out.write("                    <td>");
      out.print( board.getBname() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( board.getBdate() );
      out.write("</td>\r\n");
      out.write("                    <td>");
      out.print( board.getBhit() );
      out.write("</td>\r\n");
      out.write("                </tr>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </tbody>\r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("    <!-- 글쓰기 버튼 -->\r\n");
      out.write("    <form action=\"write.jsp\" method=\"get\" id=\"write\" style=\"position: absolute; right: 20px; bottom: 20px;\">\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-primary\" id=\"divide\">글쓰기</button>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- footer -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- footer.jsp -->\r\n");
      out.write("<!-- footer.jsp -->\r\n");
      out.write("<!-- 파일분리 : jsp022_footer.js -->\r\n");
      out.write("<footer class =\"container-fluid text-center text-white bg-secondary p-5\">\r\n");
      out.write("	copyright &copy; 2025 안윤기 all rights reservered.\r\n");
      out.write("</footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html> ");
      out.write("\r\n");
      out.write("<!-- footer -->\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
