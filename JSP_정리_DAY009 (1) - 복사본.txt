■ PART001 
Q1. mvc 란?
- 서로영향없이 쉽게 고칠수 있는 애플케이션
- m : model
- v  : view
- c  : controller

Q2. mvc1 vs  mvc2 란?
- mvc1 :   controller 역할을 jsp 담당 , 스파게티소스
- mvc2 :   controller 역할을 servlet 이 담당

Q3. DBCP란?
- 분산응용프로그램
- db커텍션 객체를 미리 (pool)에 생성해두고 사용
- 데이터베이스 과부하줄이기

Q4. jsp는   ( java )  + (  html  )    
     mvc에서의 역할은?   view

Q5.  servlet 은  (  java  ) 
     mvc에서의 역할은?  controller

Q6. DBCP를 설정하는 방법을 설명하시오.
1. jar 3개다운로드 - dbcp, collections, pool
2. Server - [server.xml]  pool 설정  <Resource />
3. 진행프로젝트 - [webapp]-[WEB-INF]- web.xml  <resource-ref>
4. test파일

Q7.  dynamic web project에서 
 jsp 가 위치하는 영역은  (   webapp  )   , 
 servlet이 위치하는 영역은 (  Java Resources ) , 
 라이브러리들 .jar 파일들이 들어가는위치는 (  [WEB-INF]-lib  ) 

Q8.  request 가오면 (  [WEB-INF]- web.xml  )  파일을 참고해서 controller를 찾는다.

Q9.  로그인 후 id를 유지하려고하면 (   session )  를 이용한다.
      셋팅이름은  username , 값은 name변수로  지정하시오.
      session.setAttribute( "username" , name );

Q10.  application scope의 범위를 적으시오. 
     application > session > request > pageContext


■ PART002
#1. frontcontroller board 게시판완성
#2. 개발사이트 api + ajax
#3. [숙제] - api 2개이상 / upgrade 기능업그레이드 

□1) dynamic web project  - JOAbooks
□2) inc - header/footer 
□3) error page 설정 -  404 , 500
□4) dbcp 연동   


■4) dbcp 연동

[com.company.controller] - [FrontController]   *.do

[클라이언트 요청]   
↓
index.jsp  ->  *.do   [FrontController]
       ㄴ  /list.do           - C:전체리스트        BList        /      V:list.jsp 
       ㄴ  /write_view.do - C:X                                          V:write.jsp 
       ㄴ  /write.do        - C:글삽입             BWrite(알림창- 성공/실패) /   V: /list.do
       ㄴ  /detail.do      - C:해당번호 상세보기  BDetail(조회수올리기/해당글상세)
                                      V:detail.jsp
       ㄴ  /edit_view.do  - C:해당번호 글수정폼  BEditView(해당글상세)
                                      V:edit.jsp
       ㄴ  /edit.do       - C:해당번호 글수정기능 BEdit(해당글수정)
                                      V: /detail.do 
       ㄴ  /delete.do     - C:해당번호 글삭제기능 BDelete(해당글삭제)      V: /list.do




2. Service
    [com.company.service]

        <<interface>> BoardService   - exec(request, response)   
   ↑             ↑            ↑            ↑            ↑           ↑  
   BList   BWrite        BDetail     BEditView     BEdit       BDelete   

>   BList     전체리스트   -  dao.list()
>   BWrite    글삽입       -  dao.insert(dto)  / 알림창- 성공/실패
>   BDetail   상세보기     -  dao.updateHit(dto) , dao.detail(dto)
>   BEditView 글수정폼   -  dao.detail(dto)
>   BEdit     글수정        -  dao.update(dto)  / 알림창- 성공/실패
>   BDelete   해당글삭제-  dao.delete(dto)  / 알림창- 성공/실패
  
 
■ Part005 필요기능
1. el/jstl
> el
  - 표현식 (출력)
  - before: <%= %>
  - after: ${ }
> jstl ( JavaServer page Standard Tag Library )
  - 자바코드 대신 태그로 웹페이지 작성
  - before: <%= if() %>
  - after: <c:if test=></c:if> / <c:forEach items="" var=""></c:forEach>

-1.  반복문, 조건문 등의 기본구현
-2.  사용법
 1. http://jakarta.apache.org/
 2. 왼쪽메뉴 :  Tablibs
 3. Standard Taglib -  다운로드 - jakarta-taglibs-standard-1.1.1.zip
 4. [WEB-INF]-[lib] - jstl.jar / standard.jar

-3. jstl 라이브러리
  core : 기본적인 기능제공
  fmt  : format 형식
  xml  : xml관련처리
  sql  : sql관련처리

2. admin만 글쓰기 (session 정리)

3. Naver api
[com.company.util]		
	NaverBook.java
4. ajax



















