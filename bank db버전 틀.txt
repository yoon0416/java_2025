■ BANK DB  CRUD ver
-- 1) 테이블설계
    번호    no     int                      필수입력   숫자증가  기본키
    아이디  id     varchar(100)          필수입력   
    비번     pw    varchar(100)          필수입력      
    잔액    balance  double                               default 0

>>>>>>>  테이블작성

create table userinfo(
    -> no int not null auto_increment primary key,
    -> id varchar(100) not null,
    -> pw varchar(100) not null,
    -> balance double default 0
    -> );

>>>>>>>>
 일단 계정 하나 만들겠습니다. id='test1' pw='test1' balance=10000;
※ where no = ?로 하는게 유리 

-- 2) SQL 작성 : 화면보고
create    (insert)   사용자입력
→ insert userinfo (id, pw, balance) values ("사용자입력","사용자입력",사용자입력)
테스트1 →  insert userinfo (id, pw, balance) values ('test1','test1',10000); //정상작동

read      (select)      사용자조회
→ select*from userinfo;
테스트1 → select*from userinfo; //정상작동

update  (update)
→ update userinfo set balance = 사용자입력 where =기본키(or 아이디);
테스트1 → update userinfo set balance = 5000 where id='test1'; //정상작동
테스트1 → update userinfo set balance = 5000 where no=1; //정상작동 ※

delete   (delete)
→ delete from userinfo where = 기본키(or 아이디);
테스트1 → delete from userinfo where id ='test1'; //정상작동
테스트1 → delete from userinfo where no=1; //정상작동 ※


> 삭제를 해도 no값이 1로 초기화가 되는게 아님 고유키라고 생각하면 편할 듯? 물론 나중에는 원리 알고 이렇게 쓸지말지 결정
> 그래서 id가 아닌 no값으로 찾기
/*

 
======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 1


*ID : first
*PASS : 1111 
*BALANCE : 10000

>>>> 필요한 sql


======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 2


*ID : first
*PASS : 1234
조회가 실패했습니다. 

아무키나 누르세요. 


>>>> 필요한 sql

======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 2


*ID : first
*PASS : 1111

======조회결과======

아이디 : first 
잔액 : 10000
암호 : 1111
조회가 성공했습니다. 

아무키나 누르세요. 

>>>> 필요한 sql


======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 3


===== 입금 계좌정보 입력 =====
*ID : first
*PASS : 1234
계좌 정보가 없습니다. 



======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 3
===== 입금 계좌정보 입력 =====


*ID : first
*PASS : 1111
입금액 : 10000


>>>> 필요한 sql 


======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 2


*ID : first
*PASS : 1111

======조회결과======

아이디 : first
나이 : 10
잔액 : 20000
암호 : 1111
조회가 성공했습니다. 

아무키나 누르세요. 



======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 4
===== 출금 계좌정보 입력 =====


*ID : first
*PASS : 1111
출금액 : 500


======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 2


*ID : first
*PASS : 1111

======조회결과======

아이디 : first
나이 : 10
잔액 : 19500
암호 : 1111
조회가 성공했습니다. 

아무키나 누르세요. 



======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 5


*ID : first
*PASS : 1234
계좌 정보가 없습니다. 



======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 5


*ID : first
*PASS : 1111
삭제하시겠습니까 ? (Y/N)y


======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 2


*ID : first
*PASS : 1111
조회가 실패했습니다. 

아무키나 누르세요. 



======BANK======
*1. 추가
*2. 조회
*3. 입금
*4. 출금
*5. 삭제
*9. 종료
입력 >> 9

*/


칼리리눅스 vs 리눅스












