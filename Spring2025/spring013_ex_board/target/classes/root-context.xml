<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd">
	<!-- Step4) -->
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"     value="com.company.dao" />
		<property name="annotationClass" value="com.company.dao.MyDao" />
	</bean>
	
	
	<!-- Step3) -->
	<!-- 	<bean id="boardDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionTemplate" ref="sqlSession" />
		<property name="mapperInterface"    value="com.company.dao.BoardDao"/>
	</bean> -->

    <!-- Step2) Mytatis
    	SqlSessionFactory (관리)
		SqlSession (sql 실행)
    -->
    <context:component-scan base-package="com.company" />
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
    	<property name="dataSource"      ref="datasource" />
    	<property name="configLocation"  value="classpath:config/mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:config/test-mapper.xml</value>
				<value>classpath:config/user-mapper.xml</value>
				<value>classpath:config/board-mapper.xml</value>
			</list>
		</property>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    	<constructor-arg  ref="sqlSessionFactory" />
    </bean>

<!-- 	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">
	        <list>
	            <value>classpath:/config/log4jdbc.log4j2.properties</value>
	        </list>
	    </property>
	</bean> -->

    <!-- Step1) Driver driver, String url, String username, String password -->
	<context:property-placeholder  location="classpath:config/db.properties" />
	<bean id="hikariConfig"   class="com.zaxxer.hikari.HikariConfig">
		  <property name="driverClassName"   value="${db.driverClassName}" />
		  <property name="jdbcUrl"           value="${db.url}"        />
		  <property name="username"      value="${db.username}"   />
		  <property name="password"      value="${db.password}"   />
	</bean>    
    <bean id="datasource"  class="com.zaxxer.hikari.HikariDataSource" 
    	  destroy-method="close">
    	<constructor-arg  ref="hikariConfig" />
    </bean>
    
    
    



</beans>


    
 <!--    <context:property-placeholder  location="classpath:config/db.properties" />
	<bean id="datasource"   
		  class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		  <property name="driverClass"   value="${db.driverClass}"></property>
		  <property name="url"           value="${db.url}"        ></property>
		  <property name="username"      value="${db.username}"   ></property>
		  <property name="password"      value="${db.password}"   ></property>
	</bean>
 -->
	
